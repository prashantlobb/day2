# this should be the folder name under `ios` for your project
project_name = 'remoteConfigApp'

# NOTE: This is meant to be run on CI where it changes everything before building the app.
# Usage:
#   `RN_RELEASE_TYPE=beta fastlane prep_release_type` (on CI these ENV variables should be set via the UI)
desc "Updates the app identifier, display name and icon for alpha, beta, and production releases"
lane :prep_release_type do
  # alpha, beta, production
  type = ENV['RN_RELEASE_TYPE'] || 'production'
  next if type == 'production'
  
  suffix = ENV['RN_BUNDLE_SUFFIX'] || type
  # assumes identifier is defined in Appfile
  app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  new_app_id = "#{app_id}.#{suffix}"
  
  # update the app identifier and bundle
  UI.message "\n\nSetting app identifier to: #{new_app_id}"

  # update ios indentifier
  update_info_plist(
    plist_path: "#{project_name}/Info.plist",
    xcodeproj: "./ios/#{project_name}.xcodeproj",
    app_identifier: new_app_id
  )

  # update android suffix
  set_value_in_build(
    app_project_dir: "./android/app",
    key: "applicationIdSuffix",
    value: ".#{suffix}"
  )

   # ...
    
    # Add badge to app icon
    # want to add the app version to the icon? try this:
    #  current_version = get_version_number(xcodeproj: "./ios/#{project_name}.xcodeproj", target: project_name) 
    #  add_badge(
    #    shield: "Version-#{current_version}-blue"
    #    shield_scale: 0.75
    #  ) 
    # 
    # See all available options at: https://github.com/HazAT/badge
    UI.message "\n\nUpdating app icon with #{type} badge"
  
    # ios badge
    add_badge(
      glob: "/ios/**/*.appiconset/*.{png,PNG}", # note no dot in path
      alpha: type == 'alpha',
      grayscale: type == 'alpha'
    )
  
    # android badge
    add_badge(
      glob: "/android/app/src/main/res/**/*.{png,PNG}", # note no dot in path
      alpha: type == 'alpha',
      grayscale: type == 'alpha'
    )
end
